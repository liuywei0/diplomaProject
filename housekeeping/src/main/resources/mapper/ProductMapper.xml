<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.liuywei.housekeeping.dao.ProductMapper">
    <resultMap id="BaseResultMap" type="com.liuywei.housekeeping.domain.Product">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="price" jdbcType="VARCHAR" property="price"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="photo" jdbcType="VARCHAR" property="photo"/>
        <result column="sales" jdbcType="INTEGER" property="sales"/>
        <result column="category_id" jdbcType="BIGINT" property="categoryId"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.liuywei.housekeeping.domain.Product">
        <result column="introduce" jdbcType="LONGVARCHAR" property="introduce"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , name, price, status, photo, sales, category_id
    </sql>
    <sql id="Blob_Column_List">
        introduce
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.liuywei.housekeeping.domain.ProductExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from hk_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.liuywei.housekeeping.domain.ProductExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from hk_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from hk_product
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from hk_product
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.liuywei.housekeeping.domain.ProductExample">
        delete from hk_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.liuywei.housekeeping.domain.Product">
        insert into hk_product (id, name, price,
                                status, photo, sales,
                                category_id, introduce)
        values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR},
                #{status,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, #{sales,jdbcType=INTEGER},
                #{categoryId,jdbcType=BIGINT}, #{introduce,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.liuywei.housekeeping.domain.Product">
        insert into hk_product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="photo != null">
                photo,
            </if>
            <if test="sales != null">
                sales,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="introduce != null">
                introduce,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="photo != null">
                #{photo,jdbcType=VARCHAR},
            </if>
            <if test="sales != null">
                #{sales,jdbcType=INTEGER},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=BIGINT},
            </if>
            <if test="introduce != null">
                #{introduce,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.liuywei.housekeeping.domain.ProductExample"
            resultType="java.lang.Long">
        select count(*) from hk_product
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update hk_product
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.photo != null">
                photo = #{record.photo,jdbcType=VARCHAR},
            </if>
            <if test="record.sales != null">
                sales = #{record.sales,jdbcType=INTEGER},
            </if>
            <if test="record.categoryId != null">
                category_id = #{record.categoryId,jdbcType=BIGINT},
            </if>
            <if test="record.introduce != null">
                introduce = #{record.introduce,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update hk_product
        set id = #{record.id,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        photo = #{record.photo,jdbcType=VARCHAR},
        sales = #{record.sales,jdbcType=INTEGER},
        category_id = #{record.categoryId,jdbcType=BIGINT},
        introduce = #{record.introduce,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update hk_product
        set id = #{record.id,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        price = #{record.price,jdbcType=VARCHAR},
        status = #{record.status,jdbcType=VARCHAR},
        photo = #{record.photo,jdbcType=VARCHAR},
        sales = #{record.sales,jdbcType=INTEGER},
        introduce=#{record.introduce,javaType=LONGVARCHAR},
        category_id = #{record.categoryId,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.liuywei.housekeeping.domain.Product">
        update hk_product
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="photo != null">
                photo = #{photo,jdbcType=VARCHAR},
            </if>
            <if test="sales != null">
                sales = #{sales,jdbcType=INTEGER},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=BIGINT},
            </if>
            <if test="introduce != null">
                introduce = #{introduce,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.liuywei.housekeeping.domain.Product">
        update hk_product
        set name        = #{name,jdbcType=VARCHAR},
            price       = #{price,jdbcType=VARCHAR},
            status      = #{status,jdbcType=VARCHAR},
            photo       = #{photo,jdbcType=VARCHAR},
            sales       = #{sales,jdbcType=INTEGER},
            category_id = #{categoryId,jdbcType=BIGINT},
            introduce   = #{introduce,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.liuywei.housekeeping.domain.Product">
        update hk_product
        set name        = #{name,jdbcType=VARCHAR},
            price       = #{price,jdbcType=VARCHAR},
            status      = #{status,jdbcType=VARCHAR},
            photo       = #{photo,jdbcType=VARCHAR},
            sales       = #{sales,jdbcType=INTEGER},
            category_id = #{categoryId,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>